[{"C:\\Users\\Ahmed\\Desktop\\starter\\src\\index.js":"1","C:\\Users\\Ahmed\\Desktop\\starter\\src\\App.js":"2","C:\\Users\\Ahmed\\Desktop\\starter\\src\\BooksAPI.js":"3","C:\\Users\\Ahmed\\Desktop\\starter\\src\\Card.js":"4","C:\\Users\\Ahmed\\Desktop\\starter\\src\\single.js":"5"},{"size":513,"mtime":1651434066724,"results":"6","hashOfConfig":"7"},{"size":7827,"mtime":1651491831849,"results":"8","hashOfConfig":"7"},{"size":1097,"mtime":1651408194229,"results":"9","hashOfConfig":"7"},{"size":1628,"mtime":1651490791259,"results":"10","hashOfConfig":"7"},{"size":2506,"mtime":1651439838633,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"3od7wj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\Ahmed\\Desktop\\starter\\src\\index.js",[],["24","25"],"C:\\Users\\Ahmed\\Desktop\\starter\\src\\App.js",["26","27","28"],"C:\\Users\\Ahmed\\Desktop\\starter\\src\\BooksAPI.js",[],"C:\\Users\\Ahmed\\Desktop\\starter\\src\\Card.js",["29","30","31","32"],"C:\\Users\\Ahmed\\Desktop\\starter\\src\\single.js",["33","34"],"import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { get } from \"./BooksAPI\";\r\nimport Card from \"./Card\";\r\n\r\nfunction App() {\r\n  const [showSearchPage, setShowSearchpage] = useState(false);\r\n  const { id } = useParams();\r\n  const [book, setBook] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      get(id).then((book) => setBook(book));\r\n    }\r\n  }, [id]);\r\n\r\n  console.log(typeof book);\r\n  // how to access the book item object in the console?\r\n  \r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {showSearchPage ? (\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <a\r\n              className=\"close-search\"\r\n              onClick={() => setShowSearchpage(!showSearchPage)}\r\n            >\r\n              Close\r\n            </a>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by title, author, or ISBN\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\"></ol>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"list-books\">\r\n          <div className=\"list-books-title\">\r\n            <h1>MyReads</h1>\r\n          </div>\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n              <div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                <div className=\"bookshelf-books\">\r\n                  <ol className=\"books-grid\">\r\n                    {/* show book info id */}\r\n                    <div>\r\n                      {book && (\r\n                        <Card\r\n                          key={book.id}\r\n                          id={book.id}\r\n                          imageLinks={book.imageLinks.smallThumbnail}\r\n                          title={book.title}\r\n                          authors={book.authors}\r\n                          shelf={book.shelf}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    \r\n                  </ol>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":3,"column":18,"nodeType":"41","messageId":"42","endLine":3,"endColumn":21},{"ruleId":"43","severity":1,"message":"44","line":35,"column":13,"nodeType":"45","endLine":38,"endColumn":14},{"ruleId":"43","severity":1,"message":"44","line":187,"column":13,"nodeType":"45","endLine":187,"endColumn":67},{"ruleId":"39","severity":1,"message":"46","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":13},{"ruleId":"39","severity":1,"message":"47","line":3,"column":10,"nodeType":"41","messageId":"42","endLine":3,"endColumn":18},{"ruleId":"39","severity":1,"message":"48","line":3,"column":20,"nodeType":"41","messageId":"42","endLine":3,"endColumn":29},{"ruleId":"39","severity":1,"message":"49","line":4,"column":10,"nodeType":"41","messageId":"42","endLine":4,"endColumn":19},{"ruleId":"43","severity":1,"message":"44","line":28,"column":13,"nodeType":"45","endLine":31,"endColumn":14},{"ruleId":"43","severity":1,"message":"44","line":77,"column":13,"nodeType":"45","endLine":77,"endColumn":67},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'get' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'react' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","no-global-assign","no-unsafe-negation"]