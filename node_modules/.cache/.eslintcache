[{"C:\\Users\\Ahmed\\Desktop\\starter\\src\\index.js":"1","C:\\Users\\Ahmed\\Desktop\\starter\\src\\App.js":"2","C:\\Users\\Ahmed\\Desktop\\starter\\src\\BooksAPI.js":"3","C:\\Users\\Ahmed\\Desktop\\starter\\src\\Card.js":"4","C:\\Users\\Ahmed\\Desktop\\starter\\src\\single.js":"5"},{"size":513,"mtime":1651434066724,"results":"6","hashOfConfig":"7"},{"size":5015,"mtime":1651773471706,"results":"8","hashOfConfig":"7"},{"size":1097,"mtime":1651770620646,"results":"9","hashOfConfig":"7"},{"size":1627,"mtime":1651493654070,"results":"10","hashOfConfig":"7"},{"size":2769,"mtime":1651497848962,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"3od7wj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\Ahmed\\Desktop\\starter\\src\\index.js",[],["25","26"],"C:\\Users\\Ahmed\\Desktop\\starter\\src\\App.js",["27","28","29","30","31"],"C:\\Users\\Ahmed\\Desktop\\starter\\src\\BooksAPI.js",[],"C:\\Users\\Ahmed\\Desktop\\starter\\src\\Card.js",["32","33","34","35"],"import react from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { handleChange } from \"./App\";\r\n\r\nfunction Card(props) {\r\n    return (\r\n\r\n        <li key={ props.id } >\r\n                <div className=\"book-top\">\r\n                    <div\r\n                        className=\"book-cover\"\r\n                        style={{\r\n                            width: 128,\r\n                            height: 193,\r\n                            backgroundImage: `url(${props.imageLinks})`,\r\n                        }}\r\n                    ></div>\r\n                    <div className=\"book-shelf-changer\">\r\n                        <select onChange={ handleChange } id={ props.id } >\r\n                            <option value=\"none\" disabled>\r\n                                Move to...\r\n                            </option>\r\n                            <option value=\"currentlyReading\">\r\n                                Currently Reading\r\n                            </option>\r\n                            <option value=\"wantToRead\">Want to Read</option>\r\n                            <option value=\"read\">Read</option>\r\n                            <option value=\"none\">None</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            <Link to={'/single/'+props.id} className=\"book\">\r\n                <div className=\"book-title\">{props.title}</div>\r\n                <div className=\"book-authors\">{props.author}</div>\r\n            </Link>\r\n        </li>\r\n    )\r\n}\r\nexport default Card;","C:\\Users\\Ahmed\\Desktop\\starter\\src\\single.js",["36","37"],"import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nimport { get } from \"./BooksAPI\";\r\nimport Card from \"./Card\";\r\n\r\nfunction App() {\r\n  const [showSearchPage, setShowSearchpage] = useState(false);\r\n  const { id } = useParams();\r\n  const [book, setBook] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      get(id).then((book) => setBook(book));\r\n    }\r\n  }, [id]);\r\n\r\n  console.log(typeof book);\r\n  // how to access the book item object in the console?\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {showSearchPage ? (\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <a\r\n              className=\"close-search\"\r\n              onClick={() => setShowSearchpage(!showSearchPage)}\r\n            >\r\n              Close\r\n            </a>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by title, author, or ISBN\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\"></ol>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"list-books\">\r\n          <div className=\"list-books-title\">\r\n            \r\n                   < Link to=\"/\"><h1>MyReads</h1></Link>\r\n                   < Link to=\"/\">back to home MyReads</Link>\r\n          </div>\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n              <div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">\r\n                    <Link to={'/'} className=\"close-search\"> </Link>\r\n            { book && (   book.title ) }\r\n            \r\n                </h2>\r\n                <div className=\"bookshelf-books\">\r\n                  <ol className=\"books-grid\">\r\n                    {/* show book info id */}\r\n                    <div>\r\n                      {book && (\r\n                        <Card\r\n                          key={book.id}\r\n                          id={book.id}\r\n                          imageLinks={book.imageLinks.smallThumbnail}\r\n                          title={book.title}\r\n                          authors={book.authors}\r\n                          shelf={book.shelf}\r\n                        />\r\n                      )}\r\n                    </div>\r\n            { book && (   book.description ) }\r\n\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":3,"column":18,"nodeType":"44","messageId":"45","endLine":3,"endColumn":21},{"ruleId":"42","severity":1,"message":"46","line":10,"column":9,"nodeType":"44","messageId":"45","endLine":10,"endColumn":11},{"ruleId":"42","severity":1,"message":"47","line":21,"column":10,"nodeType":"44","messageId":"45","endLine":21,"endColumn":15},{"ruleId":"48","severity":1,"message":"49","line":40,"column":13,"nodeType":"50","endLine":43,"endColumn":14},{"ruleId":"48","severity":1,"message":"49","line":137,"column":13,"nodeType":"50","endLine":137,"endColumn":67},{"ruleId":"42","severity":1,"message":"51","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":13},{"ruleId":"42","severity":1,"message":"52","line":3,"column":10,"nodeType":"44","messageId":"45","endLine":3,"endColumn":18},{"ruleId":"42","severity":1,"message":"53","line":3,"column":20,"nodeType":"44","messageId":"45","endLine":3,"endColumn":29},{"ruleId":"42","severity":1,"message":"54","line":4,"column":10,"nodeType":"44","messageId":"45","endLine":4,"endColumn":19},{"ruleId":"48","severity":1,"message":"49","line":28,"column":13,"nodeType":"50","endLine":31,"endColumn":14},{"ruleId":"48","severity":1,"message":"49","line":84,"column":13,"nodeType":"50","endLine":84,"endColumn":67},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'get' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'query' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'react' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","no-global-assign","no-unsafe-negation"]